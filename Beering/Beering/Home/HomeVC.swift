//
//  HomeVC.swift
//  Beering
//
//  Created by YoonSub Lim on 2023/07/05.
//

import UIKit
import SwiftUI

class HomeVC: UIViewController {

    @IBOutlet weak var reviewTableView: UITableView!
    
    @IBOutlet weak var homeProfileImage: UIImageView!
    
    var tempData: [reviewCellInfo] = [
        reviewCellInfo(profileImageUrl: "https://picsum.photos/50", nickname: "ÏûÑÏú§ÏÑ≠", createdAt: "1Ï£ºÏ†Ñ", isGood: true, isGoodCount: 301, isBadCount: 209, reviewImageUrls: [], reviewText: "ÎÑàÎ¨¥Ï¢ãÏïÑÏöî ÎÑàÎ¨¥Ï¢ãÏïÑÏöî ÎÑàÎ¨¥Ï¢ãÏïÑÏöî ÎÑàÎ¨¥Ï¢ãÏïÑÏöî ÎÑàÎ¨¥Ï¢ãÏïÑÏöî ÎÑàÎ¨¥Ï¢ãÏïÑÏöî ÎÑàÎ¨¥Ï¢ãÏïÑÏöî ÎÑàÎ¨¥Ï¢ãÏïÑÏöî ÎÑàÎ¨¥Ï¢ãÏïÑÏöî ÎÑàÎ¨¥Ï¢ãÏïÑÏöî "),
        reviewCellInfo(profileImageUrl: "https://picsum.photos/50", nickname: "ÏûÑÏú§ÏÑ≠1", createdAt: "2Ï£ºÏ†Ñ", isGood: false, isGoodCount: 302, isBadCount: 208, reviewImageUrls: ["https://picsum.photos/347"], reviewText: "ÏÇ¨Î≤ïÍ∂åÏùÄ Î≤ïÍ¥ÄÏúºÎ°ú Íµ¨ÏÑ±Îêú Î≤ïÏõêÏóê ÏÜçÌïúÎã§. ÎåÄÎ≤ïÍ¥ÄÏùò ÏûÑÍ∏∞Îäî 6ÎÖÑÏúºÎ°ú ÌïòÎ©∞, Î≤ïÎ•†Ïù¥ Ï†ïÌïòÎäî Î∞îÏóê ÏùòÌïòÏó¨ Ïó∞ÏûÑÌï† Ïàò ÏûàÎã§. Ïñ∏Î°†¬∑Ï∂úÌåêÏùÄ ÌÉÄÏù∏Ïùò Î™ÖÏòàÎÇò Í∂åÎ¶¨ ÎòêÎäî Í≥µÏ§ëÎèÑÎçïÏù¥ÎÇò ÏÇ¨ÌöåÏú§Î¶¨Î•º Ïπ®Ìï¥ÌïòÏó¨ÏÑúÎäî ÏïÑÎãàÎêúÎã§. Ïñ∏Î°†¬∑Ï∂úÌåêÏù¥ ÌÉÄÏù∏Ïùò Î™ÖÏòàÎÇò Í∂åÎ¶¨Î•º Ïπ®Ìï¥Ìïú ÎïåÏóêÎäî ÌîºÌï¥ÏûêÎäî Ïù¥Ïóê ÎåÄÌïú ÌîºÌï¥Ïùò Î∞∞ÏÉÅÏùÑ Ï≤≠Íµ¨Ìï† Ïàò ÏûàÎã§. ÌóåÎ≤ïÏû¨ÌåêÏÜåÎäî Î≤ïÎ•†Ïóê Ï†ÄÏ¥âÎêòÏßÄ ÏïÑÎãàÌïòÎäî Î≤îÏúÑÏïàÏóêÏÑú Ïã¨ÌåêÏóê Í¥ÄÌïú Ï†àÏ∞®, ÎÇ¥Î∂ÄÍ∑úÏú®Í≥º ÏÇ¨Î¨¥Ï≤òÎ¶¨Ïóê Í¥ÄÌïú Í∑úÏπôÏùÑ Ï†úÏ†ïÌï† Ïàò ÏûàÎã§. Íµ≠Í∞ÄÎäî ÏÇ¨ÌöåÎ≥¥Ïû•¬∑ÏÇ¨ÌöåÎ≥µÏßÄÏùò Ï¶ùÏßÑÏóê ÎÖ∏Î†•Ìï† ÏùòÎ¨¥Î•º ÏßÑÎã§."),
        reviewCellInfo(profileImageUrl: "https://picsum.photos/50", nickname: "ÏûÑÏú§ÏÑ≠2", createdAt: "3Ï£ºÏ†Ñ", isGood: true, isGoodCount: 303, isBadCount: 207, reviewImageUrls: ["https://picsum.photos/347",
                                                                                                                                                             "https://picsum.photos/347"], reviewText: "Ï†ïÍ∏∞ÌöåÏùò ÌöåÍ∏∞Îäî 100ÏùºÏùÑ, ÏûÑÏãúÌöåÏùò ÌöåÍ∏∞Îäî 30ÏùºÏùÑ Ï¥àÍ≥ºÌï† Ïàò ÏóÜÎã§."),
        reviewCellInfo(profileImageUrl: "https://picsum.photos/50", nickname: "ÏûÑÏú§ÏÑ≠3", createdAt: "4Ï£ºÏ†Ñ", isGood: true, isGoodCount: 304, isBadCount: 206, reviewImageUrls: ["https://picsum.photos/347",
                                                                                                                                                             "https://picsum.photos/347",
                                                                                                                                                             "https://picsum.photos/347",
                                                                                                                                                             "https://picsum.photos/347"], reviewText: "ÎåÄÌÜµÎ†πÏùÄ ÎÇ¥Ïö∞¬∑Ïô∏Ìôò¬∑Ï≤úÏû¨¬∑ÏßÄÎ≥Ä ÎòêÎäî Ï§ëÎåÄÌïú Ïû¨Ï†ï¬∑Í≤ΩÏ†úÏÉÅÏùò ÏúÑÍ∏∞Ïóê ÏûàÏñ¥ÏÑú Íµ≠Í∞ÄÏùò ÏïàÏ†ÑÎ≥¥Ïû• ÎòêÎäî Í≥µÍ≥µÏùò ÏïàÎÖïÏßàÏÑúÎ•º Ïú†ÏßÄÌïòÍ∏∞ ÏúÑÌïòÏó¨ Í∏¥Í∏âÌïú Ï°∞ÏπòÍ∞Ä ÌïÑÏöîÌïòÍ≥† Íµ≠ÌöåÏùò ÏßëÌöåÎ•º Í∏∞Îã§Î¶¥ Ïó¨Ïú†Í∞Ä ÏóÜÏùÑ ÎïåÏóê ÌïúÌïòÏó¨ ÏµúÏÜåÌïúÏúºÎ°ú ÌïÑÏöîÌïú Ïû¨Ï†ï¬∑Í≤ΩÏ†úÏÉÅÏùò Ï≤òÎ∂ÑÏùÑ ÌïòÍ±∞ÎÇò Ïù¥Ïóê Í¥ÄÌïòÏó¨ Î≤ïÎ•†Ïùò Ìö®Î†•ÏùÑ Í∞ÄÏßÄÎäî Î™ÖÎ†πÏùÑ Î∞úÌï† Ïàò ÏûàÎã§.ÎåÄÌÜµÎ†πÏùÄ Î≤ïÎ•†ÏóêÏÑú Íµ¨Ï≤¥Ï†ÅÏúºÎ°ú Î≤îÏúÑÎ•º Ï†ïÌïòÏó¨ ÏúÑÏûÑÎ∞õÏùÄ ÏÇ¨Ìï≠Í≥º Î≤ïÎ•†ÏùÑ ÏßëÌñâÌïòÍ∏∞ ÏúÑÌïòÏó¨ ÌïÑÏöîÌïú ÏÇ¨Ìï≠Ïóê Í¥ÄÌïòÏó¨ ÎåÄÌÜµÎ†πÎ†πÏùÑ Î∞úÌï† Ïàò ÏûàÎã§. ÏÇ¨Î≤ïÍ∂åÏùÄ Î≤ïÍ¥ÄÏúºÎ°ú Íµ¨ÏÑ±Îêú Î≤ïÏõêÏóê ÏÜçÌïúÎã§."),
        reviewCellInfo(profileImageUrl: "https://picsum.photos/50", nickname: "ÏûÑÏú§ÏÑ≠4", createdAt: "5Ï£ºÏ†Ñ", isGood: false, isGoodCount: 305, isBadCount: 205, reviewImageUrls: [], reviewText: "Ï©ù ÎßõÏûàÎÑ§Ïöî"),
        reviewCellInfo(profileImageUrl: "https://picsum.photos/50", nickname: "ÏûÑÏú§ÏÑ≠5", createdAt: "6Ï£ºÏ†Ñ", isGood: true, isGoodCount: 306, isBadCount: 204, reviewImageUrls: ["https://picsum.photos/347",
                                                                                                                                                             "https://picsum.photos/347",
                                                                                                                                                             "https://picsum.photos/347",
                                                                                                                                                             "https://picsum.photos/347",
                                                                                                                                                             "https://picsum.photos/347"], reviewText: "Ïöî"),
    ]
    
    override func viewDidLoad() {
        super.viewDidLoad()
        
        print("#############accessToken#############")
        print(KeyChain.retrieve(account: "BeeringAccessToken"))
        // Do any additional setup after loading the view.
        print("## HomeVC ÏßÑÏûÖ")
        self.navigationController?.navigationBar.barTintColor = UIColor(named: "Beering_White")
        
        reviewTableView.delegate = self
        reviewTableView.dataSource = self
        
        let reviewCellNibName = UINib(nibName: "ReviewCell", bundle: nil)
        reviewTableView.register(reviewCellNibName, forCellReuseIdentifier: "reviewCell")
        
        homeProfileImage.makeCircular()
        homeProfileImage.loadImage(from: "https://picsum.photos/333")
    }
    
    override func viewWillAppear(_ animated: Bool) {
        self.tabBarController?.tabBar.isHidden = false
    }
    
}

// Review Table View Cell Îç∞Ïù¥ÌÑ∞ ÏÇΩÏûÖ
extension HomeVC: UITableViewDelegate, UITableViewDataSource, ReviewCellDelegate{
    
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return tempData.count /// TODO Change to Review Data Object Count
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        
        let cell = tableView.dequeueReusableCell(withIdentifier: "reviewCell", for: indexPath) as! ReviewCell
        
        cell.index = indexPath.row
        cell.delegate = self
        
        cell.profileImage.loadImage(from: tempData[indexPath.row].profileImageUrl)
        cell.profileImage.makeCircular()
        
        cell.nickname.text = tempData[indexPath.row].nickname
//        cell.reviewText.setLineSpacing(spacing: 10)
        
        cell.creatdAt.text = tempData[indexPath.row].createdAt
        
        if let isGood = tempData[indexPath.row].isGood{
            if isGood{
                cell.isGoodReviewBtn.setImage(UIImage(named: "like_filled"), for: .normal)
            }else{
                cell.isBadReviewBtn.setImage(UIImage(named: "dislike_filled"), for: .normal)
            }
        }
        
        cell.isGoodCount.text = String(tempData[indexPath.row].isGoodCount)
        cell.isBadCount.text = String(tempData[indexPath.row].isBadCount)
        
        cell.reviewText.text = tempData[indexPath.row].reviewText
        
        cell.reviewImageCollectionView.delegate = cell
        cell.reviewImageCollectionView.dataSource = cell
//        cell.reviewImageCollectionView.reloadData()
        
//        print("## reviewImages[indexPath.row] is \(reviewImages[indexPath.row])")
        
        /// TODO CollectionView Ïùò ÎÜíÏù¥Î•º Ï°∞Ï†ïÌïòÎäî Í≤ÉÏù¥ ÏïÑÎãå, ÏïÑÏòà ÏÇ¨ÎùºÏßÄÎèÑÎ°ù Refactoring
        if tempData[indexPath.row].reviewImageUrls.count > 0{
            cell.setReviewImages(tempData[indexPath.row].reviewImageUrls)
            cell.setCollectionViewHeight(208)
        }else{
            cell.setCollectionViewHeight(0)
        }
        
//        print("## " + cell.nickname.text!)
//        print("## indexPath.row : " + String(indexPath.row))
        
        return cell
    }
    
    // üëç üëé Click ÏãúÏùò, SearchCellDelegate Íµ¨ÌòÑ Î©îÏÑúÎìú
    func reloadReviewGoodOrBadData(_ index: Int, _ isGood: Bool, _ isBad: Bool) {
        
        if isGood == false && isBad == false{
            tempData[index].isGood = nil
        }else if isGood == true{
            tempData[index].isGood = true
        }else{
            tempData[index].isGood = false
        }
    }
    
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        
        let nextVC = UIStoryboard(name: "ReviewDetail", bundle: nil).instantiateInitialViewController()
        self.navigationController?.pushViewController(nextVC!, animated: true)
    }
}

struct HomeSBPreView:PreviewProvider {
    static var previews: some View {
        UIStoryboard(name: "Home", bundle: nil).instantiateInitialViewController()!.toPreview()
    }
}

struct HomeVCPreView:PreviewProvider {
    static var previews: some View {
        HomeVC().toPreview()
    }
}

struct reviewCellInfo{
    var profileImageUrl: String
    var nickname: String
    var createdAt: String
    var isGood: Bool?
    var isGoodCount: Int
    var isBadCount: Int
    var reviewImageUrls: [String]
    var reviewText: String
}
